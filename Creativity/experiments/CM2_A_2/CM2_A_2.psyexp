<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2020.2.10">
  <Settings>
    <Param name="Audio latency priority" updates="None" val="use prefs" valType="str"/>
    <Param name="Audio lib" updates="None" val="use prefs" valType="str"/>
    <Param name="Completed URL" updates="None" val="" valType="str"/>
    <Param name="Data file delimiter" updates="None" val="auto" valType="str"/>
    <Param name="Data filename" updates="None" val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code"/>
    <Param name="Enable Escape" updates="None" val="True" valType="bool"/>
    <Param name="Experiment info" updates="None" val="{'participant': ''}" valType="code"/>
    <Param name="Force stereo" updates="None" val="True" valType="bool"/>
    <Param name="Full-screen window" updates="None" val="True" valType="bool"/>
    <Param name="HTML path" updates="None" val="html" valType="str"/>
    <Param name="Incomplete URL" updates="None" val="" valType="str"/>
    <Param name="Monitor" updates="None" val="testMonitor" valType="str"/>
    <Param name="Resources" updates="None" val="[]" valType="fileList"/>
    <Param name="Save csv file" updates="None" val="False" valType="bool"/>
    <Param name="Save excel file" updates="None" val="True" valType="bool"/>
    <Param name="Save log file" updates="None" val="True" valType="bool"/>
    <Param name="Save psydat file" updates="None" val="True" valType="bool"/>
    <Param name="Save wide csv file" updates="None" val="False" valType="bool"/>
    <Param name="Screen" updates="None" val="1" valType="num"/>
    <Param name="Show info dlg" updates="None" val="True" valType="bool"/>
    <Param name="Show mouse" updates="None" val="False" valType="bool"/>
    <Param name="Units" updates="None" val="height" valType="str"/>
    <Param name="Use version" updates="None" val="" valType="str"/>
    <Param name="Window size (pixels)" updates="None" val="[1440, 900]" valType="code"/>
    <Param name="blendMode" updates="None" val="avg" valType="str"/>
    <Param name="color" updates="None" val="$[0,0,0]" valType="str"/>
    <Param name="colorSpace" updates="None" val="rgb" valType="str"/>
    <Param name="expName" updates="None" val="CM2_A_2" valType="str"/>
    <Param name="exportHTML" updates="None" val="on Sync" valType="str"/>
    <Param name="logging level" updates="None" val="debug" valType="code"/>
  </Settings>
  <Routines>
    <Routine name="setup">
      <CodeComponent name="code_js">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="Array.prototype.append = [].push; &amp;#10;shuffle = util.shuffle;&amp;#10;&amp;#10;if( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ) {&amp;#10;  quitPsychoJS('Mobile device detected. Goodbye!', false)&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_js" valType="code"/>
      </CodeComponent>
      <CodeComponent name="code_start">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="words_practice = [];&amp;#10;words_target = [];&amp;#10;words_lure = [];&amp;#10;words_distractor = [];&amp;#10;rat_stim = [];&amp;#10;&amp;#10;key_to_position = {'a':0,'s':1,'z':2,'x':3}&amp;#10;&amp;#10;targetwords = []&amp;#10;&amp;#10;i=0&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="words_practice = [];&amp;#10;words_target = [];&amp;#10;words_lure = [];&amp;#10;words_distractor = [];&amp;#10;document.body.style.cursor='none';" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="if ((Type === &quot;practice&quot;)) {&amp;#10;    words_practice.append([WordsStimuli]);&amp;#10;} else {&amp;#10;    if ((Type === &quot;target&quot;)) {&amp;#10;        words_target.append([WordsStimuli]);&amp;#10;    } else {&amp;#10;        if ((Type === &quot;lure&quot;)) {&amp;#10;            words_lure.append([WordsStimuli]);&amp;#10;        } else {&amp;#10;            words_distractor.append([WordsStimuli]);&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="if (Type == &quot;practice&quot;):&amp;#10;    words_practice.append([WordsStimuli])&amp;#10;elif (Type == &quot;target&quot;):&amp;#10;    words_target.append([WordsStimuli])&amp;#10;elif (Type == &quot;lure&quot;):&amp;#10;    words_lure.append([WordsStimuli])&amp;#10;else:&amp;#10;    words_distractor.append([WordsStimuli])&amp;#10;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_start" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="recognition_test">
      <CodeComponent name="code_ltm">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="m = 0;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="positions = [[(- 0.25), 0], [0.25, 0]];&amp;#10;position_to_key = {[positions[0]]: &quot;left&quot;, [positions[1]]: &quot;right&quot;};&amp;#10;shuffle(positions);&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="shuffle(targetwords)&amp;#10;&amp;#10;positions = [(-.25, 0),(.25, 0)]&amp;#10;position_to_key = {positions[0]: 'left', positions[1]: 'right'}&amp;#10;shuffle(positions)&amp;#10;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="distractor_text = distractor.text;&amp;#10;target_text = target_ltm.text;&amp;#10;distractor_pos = distractor.pos;&amp;#10;target_pos = target_ltm.pos;&amp;#10;psychoJS.experiment.addData(&quot;TargetWord&quot;, words_target[m][0]);&amp;#10;psychoJS.experiment.addData(&quot;TargetTextDisplayed&quot;, target_text);&amp;#10;psychoJS.experiment.addData(&quot;DistractorWord&quot;, distractor_text);&amp;#10;psychoJS.experiment.addData('TargetPosition', target_pos)&amp;#10;psychoJS.experiment.addData('DistractorPosition', distractor_pos)&amp;#10;m = m+1;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="distractor_text = distractor.text&amp;#10;target_text = target_ltm.text&amp;#10;distractor_pos = distractor.pos&amp;#10;target_pos = target_ltm.pos&amp;#10;" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_ltm" valType="code"/>
      </CodeComponent>
      <PolygonComponent name="fixation_ltm">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineColor" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="nVertices" updates="constant" val="4" valType="int"/>
        <Param name="name" updates="None" val="fixation_ltm" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="shape" updates="constant" val="cross" valType="str"/>
        <Param name="size" updates="constant" val="(0.1, 0.1)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val=".5" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </PolygonComponent>
      <TextComponent name="distractor">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="distractor" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="positions.pop()" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val=".5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="180" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$words_distractor.pop()" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="target_ltm">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="target_ltm" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="positions.pop()" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val=".5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="180" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$words_target[m]" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <SliderComponent name="slider_right">
        <Param name="color" updates="constant" val="LightGray" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="False" valType="bool"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="granularity" updates="constant" val="0" valType="code"/>
        <Param name="labels" updates="constant" val="'Guess', 'Sure'" valType="list"/>
        <Param name="name" updates="None" val="slider_right" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(.35, -0.25)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="size" updates="constant" val="(.6, 0.05)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val=".5" valType="code"/>
        <Param name="stopType" updates="None" val="condition" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="storeHistory" updates="constant" val="False" valType="bool"/>
        <Param name="storeRating" updates="constant" val="True" valType="bool"/>
        <Param name="storeRatingTime" updates="constant" val="True" valType="bool"/>
        <Param name="styles" updates="constant" val="['rating', 'labels45']" valType="fixedList"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="ticks" updates="constant" val="(1,100)" valType="list"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </SliderComponent>
      <SliderComponent name="slider_left">
        <Param name="color" updates="constant" val="LightGray" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="False" valType="bool"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="granularity" updates="constant" val="0" valType="code"/>
        <Param name="labels" updates="constant" val="'Sure','Guess'" valType="list"/>
        <Param name="name" updates="None" val="slider_left" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(-.35, -0.25)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="size" updates="constant" val="(.6, 0.05)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val=".5" valType="code"/>
        <Param name="stopType" updates="None" val="condition" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="storeHistory" updates="constant" val="False" valType="bool"/>
        <Param name="storeRating" updates="constant" val="True" valType="bool"/>
        <Param name="storeRatingTime" updates="constant" val="True" valType="bool"/>
        <Param name="styles" updates="constant" val="['rating', 'labels45']" valType="fixedList"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="ticks" updates="constant" val="(-100,1)" valType="list"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </SliderComponent>
    </Routine>
    <Routine name="instructions_ltm">
      <TextComponent name="instr_text_ltm_1">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.045" valType="code"/>
        <Param name="name" updates="None" val="instr_text_ltm_1" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0,.3)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="You will see two words on the screen. One of the words was previously displayed yesterday during this task: &amp;#10;&amp;#10;" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="instr_resp_ltm">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="instr_resp_ltm" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="nothing" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <TextComponent name="instr_text_ltm_2">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.045" valType="code"/>
        <Param name="name" updates="None" val="instr_text_ltm_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -.3)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Below each word there is a confidence bar ranging from ''Guess'' to ''Sure''.&amp;#10;Use your mouse to indicate which word was previously presented and your level of confidence using the bar.&amp;#10;&amp;#10;Press &lt;space&gt; to continue." valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="text_example_1">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.035" valType="code"/>
        <Param name="name" updates="None" val="text_example_1" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.1)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="TWIG" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="text_example_2">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.035" valType="code"/>
        <Param name="name" updates="None" val="text_example_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.1, .2)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="TWIG" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="text_example_3">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.035" valType="code"/>
        <Param name="name" updates="None" val="text_example_3" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(-0.1, .2)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="SHEEP" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="text_example_4">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.035" valType="code"/>
        <Param name="name" updates="None" val="text_example_4" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.1, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="SALT" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="text_example_5">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.035" valType="code"/>
        <Param name="name" updates="None" val="text_example_5" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(-0.1, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="BONE" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <CodeComponent name="code">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="shuffle(words_target);&amp;#10;shuffle(words_distractor);&amp;#10;document.body.style.cursor='auto';&amp;#10;m = 0;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="shuffle(targetwords)" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="stimuli_words"/>
    <Routine name="end">
      <TextComponent name="end_si_text">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="end_si_text" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="You have reached the end of the task. &amp;#10;&amp;#10;Please press &lt;space&gt; when you are ready to continue." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="nothing" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="rei_scale">
      <TextComponent name="rei_instructions">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="rei_instructions" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, .25)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="180" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Using the following scale, please rate the extent that these items refer to you." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="rei_1">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="code"/>
        <Param name="name" updates="None" val="rei_1" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(-.25, 0.05)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="180" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="1&amp;#10;Definitely true&amp;#10;of myself" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="rei_2">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="code"/>
        <Param name="name" updates="None" val="rei_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(-.125, 0.085)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="180" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="2" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="rei_3">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="code"/>
        <Param name="name" updates="None" val="rei_3" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.085)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="180" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="3" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="rei_4">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="code"/>
        <Param name="name" updates="None" val="rei_4" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(.125, .085)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="180" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="4" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="rei_5">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="code"/>
        <Param name="name" updates="None" val="rei_5" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(.25, .05)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="180" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="5&amp;#10;Definitely not &amp;#10;true of myself" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="rei_text">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="rei_text" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -.15)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="180" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$rei_question" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_rei">
        <Param name="allowedKeys" updates="constant" val="'1','2','3','4','5'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_rei" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="180" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="setup_2">
      <CodeComponent name="code_2">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="words_delayed.append([WordsStimuli_2]);&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="words_delayed.append([WordsStimuli_2])&amp;#10;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_2" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="end_experiment">
      <TextComponent name="text_end_exp">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="code"/>
        <Param name="name" updates="None" val="text_end_exp" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Congratulations, you have reached the end of the experiment!&amp;#10;&amp;#10;Thank you for your time and participation.&amp;#10;&amp;#10;Please press &lt;space&gt; to close." valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_5">
        <Param name="allowedKeys" updates="constant" val="'space','return'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_5" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="nothing" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
  </Routines>
  <Flow>
    <LoopInitiator loopType="TrialHandler" name="start">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('WordsStimuli', 'STAIN'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'QUEEN'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'JUICE'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'CANDY'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'BASS'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'SODA'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'POSTER'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'WAIST'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'SPEAR'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'CAROL'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'HEAP'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'PARK'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'UNCLE'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'CAPE'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'BOSS'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'SOIL'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'MIRROR'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'SLAP'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'KING'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'FIRE'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'BREAD'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'TUNNEL'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'HAIR'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'BIRCH'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'CAGE'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'HOTEL'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'SACK'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'GRAPE'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'FLAME'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'CEREAL'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'TROUT'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'DIAL'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'SCALE'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'MARKET'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'BEACH'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'DRIVER'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'SLUSH'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'GLASS'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'PILE'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'PEST'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'FLUTE'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'MOTOR'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'CROWN'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'PRINCE'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'HORN'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'STREET'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'SHOE'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'HORSE'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'LEAF'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'CHART'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'CABLE'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'THROAT'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'KILT'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'PEOPLE'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'PUPPY'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'WIRE'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'LINEN'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'HOLE'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'KNEE'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'WEED'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'JERSEY'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'FLOWER'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'CAMP'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'DAWN'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'COFFIN'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'SHEET'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'FLOOR'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'SORE'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'PLUG'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'COACH'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'STEAM'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'WING'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'BUTTER'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'QUILT'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'GLOBE'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'TOAST'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'ROBBER'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'BRANCH'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'BLOCK'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'TOWN'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'COPPER'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'RIVER'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'SAUCER'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'INDIAN'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'TENT'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'BOARD'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'NEST'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'GRASS'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'EARTH'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'ONION'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'WIND'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'MOLE'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'LAWN'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'MOUSE'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'HONEY'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'WATCH'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'FENCE'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'BOMB'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'DUST'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'CLUB'), ('Type', 'target')]), OrderedDict([('WordsStimuli', 'FRUIT'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'TAIL'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SEAT'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'RACKET'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'ROAD'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'HAND'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'DECK'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'COIN'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'CLOCK'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SAIL'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SNAIL'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'CHALK'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'PEDAL'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SNAKE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'PEPPER'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'ZIPPER'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'CHEEK'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'ROCK'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'STICK'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'OVEN'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'GOLD'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'HERB'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'GOLF'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'MEADOW'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SLEEP'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'RUBBER'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'ROSE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'RABBI'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'TICKET'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'CAST'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'LAKE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'RICE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'RESORT'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'KISS'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'TEST'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'INFANT'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'FROG'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'BLOUSE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'DOLLAR'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'TRUNK'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'KERNEL'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'HOME'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'CATTLE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'BELL'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'CORK'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'PLUM'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'CAKE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'BOOK'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'BARREL'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'KITE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'BLADE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'COAT'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'PICKLE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'CIGAR'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'WIDOW'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'WHALE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'STEP'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SKIN'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'TRAY'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SLEIGH'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'GIRL'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'CIRCLE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'BURNER'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'WORM'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'LIQUOR'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'TRACK'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'DRESS'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'FRAME'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'PERSON'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'CURLER'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'ARCH'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'COKE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'AISLE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'ROOF'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'ROCKET'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'WOOL'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'OUNCE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'FUDGE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SCHOOL'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'MIST'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SLEEVE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'ESSAY'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'BRUSH'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'AXLE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'CANCER'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'CIRCUS'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'LADY'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'BEAM'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'LIQUID'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'ADULT'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'ROBIN'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'FILE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'FLEA'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'TOOL'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SONG'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'POLISH'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SHOP'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'FISH'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'MIXER'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'CLIFF'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'DEER'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'TANK'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SHORE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'TENNIS'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'CANDLE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'LEAD'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'GUARD'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'METAL'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'PEAR'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'CAVE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'PIPE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'DIVE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'DATE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'HOCKEY'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'HILL'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'STEAK'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'CRUMB'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'PINE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'POND'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'LAND'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'COTTON'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'LUNG'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'KNIGHT'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'CHEST'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'DRUG'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'LIGHT'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'TRAIL'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'MAGNET'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'COUSIN'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'STRING'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'BATTLE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'BLONDE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'STING'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'CREAM'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'ISLAND'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'GRAPH'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'POET'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'DRAIN'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'CAFE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'VODKA'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'HELMET'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'GANG'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'HOOD'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'FROST'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'LINE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SAUCE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SEAL'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'ENGINE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'FEET'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'TEETH'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'OCEAN'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SLOPE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'BOAT'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'LENS'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'FELLOW'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SNOW'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'ALLEY'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SEAM'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'MOOSE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'POUND'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'STAFF'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'KETTLE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SPOOL'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SOAP'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'PEACH'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'PUNCH'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'KICK'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'COOK'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'MATCH'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'WOLF'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SCOTCH'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'CIDER'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'MUSCLE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SILK'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'POLE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'PARTY'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'RECORD'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'DAGGER'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SOCK'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'LETTER'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'ARTIST'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'PAPER'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'YAWN'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'CANNON'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'CHINA'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'DOCK'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'CONE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'COUCH'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'BEAK'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'PLIERS'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'DOCTOR'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'RUST'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'RING'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SLEET'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'VELVET'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'ORGAN'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'BAND'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'APPLE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'NOTE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'TURTLE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'CABIN'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'VEIN'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'CURB'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'CLAM'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SCAB'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'DITCH'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'TRIBE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'BRANDY'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SPARK'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'STONE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'PONY'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'FOIL'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'BELLY'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'PLANT'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'BATH'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SUNSET'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SHRIMP'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'GARLIC'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'POCKET'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'COFFEE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'TIGER'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SWIM'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'HEART'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'YARD'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SHARK'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'DOLL'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SKIRT'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'AUNT'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'BABY'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'COURT'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SCREAM'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'PEARL'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'LOTION'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'WINTER'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'ROPE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'GRAVY'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'GLOVE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'CLOWN'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SEED'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SNEEZE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SPONGE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'LANE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'FLOOD'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SWEEP'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'FOOD'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'BARK'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'STAIR'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'BREEZE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'PLANK'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'CLOSET'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'LAMB'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'BUSH'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'PILL'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'GROUND'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'DOME'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'MOVIE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'TEXT'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'CHOIR'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'CROSS'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'CHURCH'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'GOWN'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'TIDE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'COAL'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SOUND'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'THREAD'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'CARD'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'MONKEY'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'POWDER'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'WOMAN'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'COIL'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'NOSE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'DANCE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SHIRT'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'LUNCH'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SHIP'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'CROWD'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'NAPKIN'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'CARPET'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'NECK'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'WORKER'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'JEWEL'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'GIFT'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'TABLE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'TRASH'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'NIGHT'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'BUBBLE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'GOAL'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'PAINT'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'MINER'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SALAD'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'POOL'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'INSECT'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'ANKLE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'MEAL'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'KITTEN'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'PARCEL'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'CALF'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'AERIAL'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'POLLEN'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SHED'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'DRINK'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SPECK'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'MAROON'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'ORANGE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'VERSE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'BOTTLE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'TOILET'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SMILE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'BOWL'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'LOOP'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'KNOB'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'RAIN'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'POPE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'NOTICE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'CUBE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'CLOTH'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'GATE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'PHONE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'PUDDLE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'BUMP'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'MENU'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'CHERRY'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'PALM'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'WAVE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'CEMENT'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SUPPER'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'CELL'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'MOTHER'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'WALLET'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'PIMPLE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'WHEEL'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'STRAW'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'FACE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'ROOM'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'LIVER'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'VOTER'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'QUART'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'TEAM'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'NOODLE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'POST'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'GRAVEL'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SPOON'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'FLAG'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'PILLOW'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'CHILD'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SILVER'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'RULER'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'CHIN'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'JELLY'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SMOKE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'FLESH'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'PANTS'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'COAST'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'HOOK'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'BELT'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'FABRIC'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SPICE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SEWER'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'MUSIC'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'LEADER'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'HAMMER'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'BIRD'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'TIRE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'BRAKE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'TAPE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'WINDOW'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'RIBBON'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'BEER'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'DUMMY'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'RAMP'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SWEAT'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'WATER'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'DINNER'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'MASTER'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'PAWN'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SKULL'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SANDAL'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'VALLEY'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'PLANE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'LION'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'BROOM'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'CASE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'PARADE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'GIRDLE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'GROIN'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'RABBIT'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'WRECK'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'DRUM'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'CRADLE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'MILK'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SINK'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'STEEL'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SURF'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'BASIN'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'SIGN'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'NAVEL'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'LAWYER'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'TOAD'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'DIRT'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'MATE'), ('Type', 'lure')]), OrderedDict([('WordsStimuli', 'THUMB'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'SPADE'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'BALL'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'JEEP'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'FARM'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'CORN'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'COLUMN'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'STEW'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'BASKET'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'PIGEON'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'LEMON'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'BILL'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'BANK'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'NURSE'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'MOON'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'BUTTON'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'MAPLE'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'LOCK'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'SPRUCE'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'PRIEST'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'NEEDLE'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'GROCER'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'SPOKE'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'FORK'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'COLLAR'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'SINGER'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'KNIFE'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'HAZE'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'HAWK'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'PLATE'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'WORLD'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'SPIDER'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'GRIP'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'STEM'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'DOOR'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'BACK'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'CHOP'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'SPANK'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'TRAIN'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'DANCER'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'TULIP'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'DUCK'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'CASH'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'SPRAY'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'BEAN'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'PURSE'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'WEAPON'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'SUIT'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'SLIT'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'RAKE'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'SHELL'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'SHOWER'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'RASH'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'OFFICE'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'SPRING'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'BEET'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'SKATE'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'ARROW'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'LAMP'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'WOOD'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'LOCKER'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'CHIEF'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'MOUTH'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'PENCIL'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'HEEL'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'BRAIN'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'PASTE'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'THIEF'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'BEAR'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'FILM'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'CLOUD'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'NERVE'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'STABLE'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'SKUNK'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'BUCKET'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'BRIDGE'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'JUDGE'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'SLIDE'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'DESK'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'ELBOW'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'MOLD'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'ROOT'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'SCAR'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'MEDAL'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'NAIL'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'SQUARE'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'NOVEL'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'ESTATE'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'PAGE'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'WALRUS'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'STORM'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'MINK'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'SOFA'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'CARROT'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'TREE'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'LINT'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'CORNER'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'PENNY'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'HALL'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'PICK'), ('Type', 'distractor')]), OrderedDict([('WordsStimuli', 'PUMP'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'MEAT'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'BRICK'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'LUMP'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'SOUP'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'TEAR'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'STOVE'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'SOCCER'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'HEDGE'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'TOOTH'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'FOOT'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'RIFLE'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'OBJECT'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'SHOVEL'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'CROW'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'BOOT'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'MONEY'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'RACK'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'JAIL'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'ARMY'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'VOICE'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'PIANO'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'PORK'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'CITY'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'CORD'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'WHIP'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'PORT'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'MAIL'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'WALL'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'BREATH'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'BURN'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'WINK'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'DART'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'BODY'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'GUEST'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'TUBE'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'BLOOD'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'DAISY'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'MOTH'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'HEAD'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'DIME'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'BULLET'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'WOMB'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'DENT'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'FOREST'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'ATOM'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'STOOL'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'LIZARD'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'JURY'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'CLOVER'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'CHAIN'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'WALNUT'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'ITCH'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'RAIL'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'LIMB'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'STAR'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'BRAT'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'BANKER'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'WHEAT'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'NICKEL'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'PUPIL'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'TONGUE'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'GALLON'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'BEETLE'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'MALE'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'BENCH'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'WINE'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'WIFE'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'PINT'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'AUTHOR'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'LIMP'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'CHAIR'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'LEVER'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'FATHER'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'TWIG'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'TRUCK'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'SALT'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'FLASH'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'OUTFIT'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'POISON'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'BEEF'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'SHEEP'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'COVER'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'SISTER'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'GRAVE'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'SUGAR'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'STORE'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'HOUSE'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'JACKET'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'IRON'), ('Type', 'practice')]), OrderedDict([('WordsStimuli', 'BONE'), ('Type', 'practice')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="stimuli/words_text_A.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="start" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="setup"/>
    <LoopTerminator name="start"/>
    <LoopInitiator loopType="TrialHandler" name="trials_rei">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('rei_question', 'I’m not that good at figuring out complicated problems')]), OrderedDict([('rei_question', 'I am not very good at solving problems that require careful logical analysis')]), OrderedDict([('rei_question', 'I am not a very analytical thinker')]), OrderedDict([('rei_question', 'Reasoning things out carefully is not one of my strong points')]), OrderedDict([('rei_question', 'I don’t reason well under pressure')]), OrderedDict([('rei_question', 'I am much better at figuring things out logically than most people')]), OrderedDict([('rei_question', 'I have a logical mind')]), OrderedDict([('rei_question', 'I have no problem thinking things through carefully')]), OrderedDict([('rei_question', 'Using logic usually works well for me in figuring out problems in my life')]), OrderedDict([('rei_question', 'I usually have clear, explainable reasons for my decisions')]), OrderedDict([('rei_question', 'I try to avoid situations that require thinking in depth about something')]), OrderedDict([('rei_question', 'I enjoy intellectual challenges')]), OrderedDict([('rei_question', 'I don’t like to have to do a lot of thinking')]), OrderedDict([('rei_question', 'I enjoy solving problems that require hard thinking')]), OrderedDict([('rei_question', 'Thinking is not my idea of an enjoyable activity')]), OrderedDict([('rei_question', 'I prefer complex problems to simple problems')]), OrderedDict([('rei_question', 'Thinking hard and for a long time about something gives me little satisfaction')]), OrderedDict([('rei_question', 'I enjoy thinking in abstract terms')]), OrderedDict([('rei_question', 'Knowing the answer without having to understand the reasoning behind it is good enough for me')]), OrderedDict([('rei_question', 'Learning new ways to think would be very appealing to me')]), OrderedDict([('rei_question', 'I don’t have a very good sense of intuition')]), OrderedDict([('rei_question', 'Using my gut feelings usually works well for me in figuring out problems in my life.')]), OrderedDict([('rei_question', 'I believe in trusting my hunches')]), OrderedDict([('rei_question', 'I trust my initial feelings about people')]), OrderedDict([('rei_question', 'When it comes to trusting people, I can usually rely on my gut feelings')]), OrderedDict([('rei_question', 'If I were to rely on my gut feelings, I would often make mistakes')]), OrderedDict([('rei_question', 'I hardly ever go wrong when I listen to my deepest gut feelings to find an answer')]), OrderedDict([('rei_question', 'My snap judgments are probably not as good as most people’s')]), OrderedDict([('rei_question', 'I can usually feel when a person is right or wrong, even if I can’t explain how I know')]), OrderedDict([('rei_question', 'I suspect my hunches are inaccurate as often as they are accurate')]), OrderedDict([('rei_question', 'I like to rely on my intuitive impressions')]), OrderedDict([('rei_question', 'Intuition can be a very useful way to solve problems')]), OrderedDict([('rei_question', 'I often go by my instincts when deciding on a course of action')]), OrderedDict([('rei_question', 'I don’t like situations in which I have to rely on intuition')]), OrderedDict([('rei_question', 'I think there are times when one should rely on one’s intuition')]), OrderedDict([('rei_question', 'I think it is foolish to make important decisions based on feelings')]), OrderedDict([('rei_question', 'I don’t think it is a good idea to rely on one’s intuition for important decisions')]), OrderedDict([('rei_question', 'I generally don’t depend on my feelings to help me make decisions')]), OrderedDict([('rei_question', 'I  would  not  want  to  depend  on  anyone  who  described  himself  or  herself  as  intuitive')]), OrderedDict([('rei_question', 'I tend to use my heart as a guide for my actions')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="stimuli/REI_scale.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="trials_rei" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="rei_scale"/>
    <LoopTerminator name="trials_rei"/>
    <Routine name="instructions_ltm"/>
    <LoopInitiator loopType="TrialHandler" name="trial_ltm">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="words_target.length" valType="code"/>
      <Param name="name" updates="None" val="trial_ltm" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="recognition_test"/>
    <LoopTerminator name="trial_ltm"/>
    <Routine name="end_experiment"/>
  </Flow>
</PsychoPy2experiment>
